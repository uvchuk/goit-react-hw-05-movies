{"version":3,"file":"static/js/749.6475ea4e.chunk.js","mappings":"+NAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6KASVE,EAAOF,EAAAA,GAAAA,IAAH,uD,8IC4DjB,EAnEgB,SAAC,GAA2B,IAAD,IAAxBG,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1B,GAAmCC,EAAAA,EAAAA,KAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACZC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAG9CC,EAWEX,EAXFW,eACAC,EAUEZ,EAVFY,MACAC,EASEb,EATFa,QACAC,EAQEd,EARFc,YACAC,EAOEf,EAPFe,aACAC,EAMEhB,EANFgB,SACAC,EAKEjB,EALFiB,aACAC,EAIElB,EAJFkB,OACAC,EAGEnB,EAHFmB,qBAEAC,EACEpB,EADFoB,OAGF,OACE,iCACE,SAAC,IAAD,CAAYC,GAAId,EAASe,QAAzB,mBACA,UAAC,IAAD,YACE,4BACE,gBAAKC,IAAKpB,EAAWC,EAAa,GAAKU,EAAaU,IAAKZ,KACzD,wBAAKD,QAEP,4BACE,wBAAKC,IACJC,IAAW,uBAAIA,IACfE,IAAgB,wEAAaA,EAAaU,QAAQ,OACnD,kEAAYL,EAAZ,QACA,8GAAqBH,MACrB,qDACQ,IACLC,EAAOQ,KAAI,SAAAC,GAAK,OACf,4BAAwBA,EAAMC,KAA9B,MAAWD,EAAMC,KADF,QAInB,iEACU,IACPT,EAAqBO,KAAI,SAAAG,GAAO,OAC/B,0BAA0BA,EAAQD,MAAvBC,EAAQD,KADY,QAInC,uBAAIZ,IAeHf,UAKV,EClEK6B,EAAY,IAAIC,EAAAA,EAyBtB,EAvBc,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOhC,EAAP,KAAgBiC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,IALAE,EAAAA,EAAAA,YAAU,WACHF,GACLJ,EAAUO,SAAS,UAAWH,GAASI,KAAKL,EAC7C,GAAE,CAACC,IAEAlC,EAEF,OADAuC,SAAS3B,MAAQZ,EAAQW,gBAEvB,UAAC,EAAD,CAASX,QAASA,EAAlB,WACE,SAAC,KAAD,CAAMqB,GAAG,UAAT,mDACA,SAAC,KAAD,CAAMA,GAAG,UAAT,mDACA,SAAC,EAAAmB,SAAD,WACE,SAAC,KAAD,QAKT,C","sources":["components/Details/Details.styled.js","components/Details/Details.jsx","pages/Movie.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  position: absolute;\n  padding: 10px;\n  background-color: aliceblue;\n  text-decoration: none;\n  border-radius: 10px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n","import React, { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useConfig } from 'components/Context/Context';\nimport { Card, StyledLink } from './Details.styled';\n\nconst Details = ({ details, children }) => {\n  const { base_url, poster_sizes } = useConfig();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  const {\n    original_title,\n    title,\n    tagline,\n    poster_path,\n    vote_average,\n    overview,\n    release_date,\n    genres,\n    production_countries,\n    // production_companies,\n    budget,\n  } = details;\n\n  return (\n    <>\n      <StyledLink to={backLink.current}>Back</StyledLink>\n      <Card>\n        <div>\n          <img src={base_url + poster_sizes[3] + poster_path} alt={title}></img>\n          <h1>{original_title}</h1>\n        </div>\n        <div>\n          <h2>{title}</h2>\n          {tagline && <p>{tagline}</p>}\n          {vote_average && <p>Рейтинг: {vote_average.toFixed(1)}</p>}\n          <p>Бюджет: {budget}$</p>\n          <p>Вийшов в прокат: {release_date}</p>\n          <p>\n            Жанр:{' '}\n            {genres.map(genre => (\n              <span key={genre.name}>{genre.name} </span>\n            ))}\n          </p>\n          <p>\n            Країна:{' '}\n            {production_countries.map(country => (\n              <span key={country.name}>{country.name}</span>\n            ))}\n          </p>\n          <p>{overview}</p>\n          {/* <p>\n            За підтримки:{' '}\n            {production_companies.map(company =>\n              company.logo_path ? (\n                <img\n                  key={company.id}\n                  src={base_url + poster_sizes[0] + company.logo_path}\n                  alt={company.name}\n                ></img>\n              ) : (\n                <span key={company.id}>{company.name}</span>\n              )\n            )}\n          </p> */}\n          {children}\n        </div>\n      </Card>\n    </>\n  );\n};\n\nexport default Details;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport MoviesAPI from 'services/MoviesAPI/MoviesAPI';\nimport Details from 'components/Details/Details';\nconst moviesApi = new MoviesAPI();\n\nconst Movie = () => {\n  const [details, setDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    moviesApi.getMovie('details', movieId).then(setDetails);\n  }, [movieId]);\n\n  if (details) {\n    document.title = details.original_title;\n    return (\n      <Details details={details}>\n        <Link to=\"credits\">Актори</Link>\n        <Link to=\"reviews\">Огляди</Link>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </Details>\n    );\n  }\n};\n\nexport default Movie;\n"],"names":["StyledLink","styled","NavLink","Card","details","children","useConfig","base_url","poster_sizes","location","useLocation","backLink","useRef","state","from","original_title","title","tagline","poster_path","vote_average","overview","release_date","genres","production_countries","budget","to","current","src","alt","toFixed","map","genre","name","country","moviesApi","MoviesAPI","useState","setDetails","movieId","useParams","useEffect","getMovie","then","document","Suspense"],"sourceRoot":""}